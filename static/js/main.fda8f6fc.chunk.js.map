{"version":3,"sources":["configs.js","chukApi.js","Components/CategoriesButton/CategoriesButton.js","Components/Header/Header.js","img/clipart1131480 1.png","Components/Phrase/Phrase.js","App.jsx","index.jsx"],"names":["API_URL","getJoke","route","fetch","then","res","json","CategoriesButton","props","name","className","type","onClick","Header","icon","src","alt","Phrase","phrase","chuck","App","useState","setPhrase","categories","setCategories","setIcon","useEffect","a","randomPhrase","allCategories","value","icon_url","map","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAAaA,G,MAAU,oCCEVC,EAAU,SAAAC,GAAK,OAAIC,MAAM,GAAD,OAAIH,EAAJ,YAAeE,IACjDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCCNC,G,MAAmB,SAACC,GAAW,IAClCC,EAAkBD,EAAlBC,KAAMR,EAAYO,EAAZP,QAEd,OACE,wBACES,UAAU,gBACVC,KAAK,SACLC,QAASX,EAHX,SAKGQ,MCVMI,G,MAAS,SAACL,GAAU,IAEvBM,EAASN,EAATM,KAER,OACE,mCACE,qBAAKJ,UAAU,OAAOK,IAAKD,EAAME,IAAI,cACrC,qDCVS,G,MAAA,IAA0B,8CCK5BC,EAAS,SAACT,GAAW,IACxBU,EAAWV,EAAXU,OAER,OACE,sBAAKR,UAAU,sBAAf,UACE,qBAAKA,UAAU,YAAYK,IAAKI,EAAOH,IAAI,UAC3C,qBAAKN,UAAU,mBAAf,SACE,sBAAMA,UAAU,SAAhB,SAA0BQ,UCLrBE,EAAM,WAAO,IAAD,EACKC,mBAAS,MADd,mBAChBH,EADgB,KACRI,EADQ,OAEaD,mBAAS,IAFtB,mBAEhBE,EAFgB,KAEJC,EAFI,OAGCH,mBAAS,MAHV,mBAGhBP,EAHgB,KAGVW,EAHU,KAcvB,OATAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACmB1B,EAAQ,UAD3B,cACF2B,EADE,gBLPuBzB,MAAM,GAAD,OAAIH,EAAJ,gBACrCI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UKMP,OAEFuB,EAFE,OAIRL,EAAcK,GACdP,EAAUM,EAAaE,OACvBL,EAAQG,EAAaG,UANb,2CAOP,IAGD,qCACE,cAAC,EAAD,CAAQjB,KAAMA,IACd,iCACE,qBAAKJ,UAAU,kBAAf,SACE,oBAAIA,UAAU,QAAd,0BAEF,sBAAKA,UAAU,oBAAf,UACGa,EAAWS,KAAI,SAAAC,GAAI,OAClB,cAAC,EAAD,CAEExB,KAAMwB,EACNhC,QAAO,sBAAE,4BAAA0B,EAAA,sEACoB1B,EAAQ,mBAAD,OAAoBgC,IAD/C,OACDL,EADC,OAGPN,EAAUM,EAAaE,OAHhB,4CAFJG,MAST,cAAC,EAAD,CACExB,KAAK,SACLR,QAAO,sBAAE,4BAAA0B,EAAA,sEACoB1B,EAAQ,UAD5B,OACD2B,EADC,OAGPN,EAAUM,EAAaE,OAHhB,gDAOb,cAAC,EAAD,CAAQZ,OAAQA,WC5CxBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fda8f6fc.chunk.js","sourcesContent":["export const API_URL = 'https://api.chucknorris.io/jokes';\n","import { API_URL } from './configs';\n\nexport const getJoke = route => fetch(`${API_URL}/${route}`)\n  .then(res => res.json());\n\nexport const getCategories = () => fetch(`${API_URL}/categories`)\n  .then(res => res.json());\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './categoriesButton.scss';\n\nexport const CategoriesButton = (props) => {\n  const { name, getJoke } = props;\n\n  return (\n    <button\n      className=\"phrase-button\"\n      type=\"button\"\n      onClick={getJoke}\n    >\n      {name}\n    </button>\n  );\n};\n\nCategoriesButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  getJoke: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './header.scss';\n\nexport const Header = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const { icon } = props;\n\n  return (\n    <header>\n      <img className=\"logo\" src={icon} alt=\"chuk-icon\" />\n      <span>Chuck Norris</span>\n    </header>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/clipart1131480 1.e7ab581b.png\";","import React from 'react';\nimport './phrase.scss';\nimport PropTypes from 'prop-types';\nimport chuck from '../../img/clipart1131480 1.png';\n\nexport const Phrase = (props) => {\n  const { phrase } = props;\n\n  return (\n    <div className=\"chuck-img-container\">\n      <img className=\"chuck-img\" src={chuck} alt=\"Chuck\" />\n      <div className=\"phrase-container\">\n        <span className=\"phrase\">{phrase}</span>\n      </div>\n    </div>\n  );\n};\n\nPhrase.propTypes = {\n  phrase: PropTypes.string.isRequired,\n\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { getJoke, getCategories } from './chukApi';\nimport { CategoriesButton } from './Components/CategoriesButton';\nimport { Header } from './Components/Header';\nimport { Phrase } from './Components/Phrase';\n\nexport const App = () => {\n  const [phrase, setPhrase] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [icon, setIcon] = useState(null);\n\n  useEffect(async() => {\n    const randomPhrase = await getJoke('random');\n    const allCategories = await getCategories();\n\n    setCategories(allCategories);\n    setPhrase(randomPhrase.value);\n    setIcon(randomPhrase.icon_url);\n  }, []);\n\n  return (\n    <>\n      <Header icon={icon} />\n      <main>\n        <div className=\"title-container\">\n          <h1 className=\"title\">Categories</h1>\n        </div>\n        <div className=\"buttons-container\">\n          {categories.map(item => (\n            <CategoriesButton\n              key={item}\n              name={item}\n              getJoke={async() => {\n                const randomPhrase = await getJoke(`random?category=${item}`);\n\n                setPhrase(randomPhrase.value);\n              }}\n            />\n          ))}\n          <CategoriesButton\n            name=\"random\"\n            getJoke={async() => {\n              const randomPhrase = await getJoke('random');\n\n              setPhrase(randomPhrase.value);\n            }}\n          />\n        </div>\n        <Phrase phrase={phrase} />\n      </main>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}